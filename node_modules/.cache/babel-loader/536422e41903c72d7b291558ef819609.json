{"ast":null,"code":"var _jsxFileName = \"/Users/matt/react-portfolio/src/pages/Projects.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst modes = [\"out-in\", \"in-out\"];\nexport default function App() {\n  _s();\n\n  const [mode, setMode] = React.useState(\"out-in\");\n  const [state, setState] = React.useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"label\",\n      children: \"Mode:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modes\",\n      children: modes.map(m => /*#__PURE__*/_jsxDEV(Form.Check, {\n        custom: true,\n        inline: true,\n        label: m,\n        id: `mode=msContentScript${m}`,\n        type: \"radio\",\n        name: \"mode\",\n        checked: mode === m,\n        value: m,\n        onChange: event => {\n          setMode(event.target.value);\n        }\n      }, m, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(SwitchTransition, {\n        mode: mode,\n        children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n          addEndListener: (node, done) => {\n            node.addEventListener(\"transitionend\", done, false);\n          },\n          classNames: \"fade\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setState(state => !state),\n              children: state ? \"Hello, world!\" : \"Goodbye, world!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, state, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"GWCBi4WOBX7q1dx4ddSVKhlmHb0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/matt/react-portfolio/src/pages/Projects.js"],"names":["React","SwitchTransition","CSSTransition","Button","Form","modes","App","mode","setMode","useState","state","setState","map","m","event","target","value","node","done","addEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,wBAAhD;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAO,YAAP;;;AAEA,MAAMC,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,CAAd;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,QAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACS,QAAN,CAAe,IAAf,CAA1B;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGJ,KAAK,CAACO,GAAN,CAAUC,CAAC,iBACV,QAAC,IAAD,CAAM,KAAN;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,MAAM,MAHR;AAIE,QAAA,KAAK,EAAEA,CAJT;AAKE,QAAA,EAAE,EAAG,uBAAsBA,CAAE,EAL/B;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,IAAI,EAAC,MAPP;AAQE,QAAA,OAAO,EAAEN,IAAI,KAAKM,CARpB;AASE,QAAA,KAAK,EAAEA,CATT;AAUE,QAAA,QAAQ,EAAEC,KAAK,IAAI;AACjBN,UAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AAZH,SACOH,CADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF,eAoBE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEN,IAAxB;AAAA,+BACE,QAAC,aAAD;AAEE,UAAA,cAAc,EAAE,CAACU,IAAD,EAAOC,IAAP,KAAgB;AAC9BD,YAAAA,IAAI,CAACE,gBAAL,CAAsB,eAAtB,EAAuCD,IAAvC,EAA6C,KAA7C;AACD,WAJH;AAKE,UAAA,UAAU,EAAC,MALb;AAAA,iCAOE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAE,MAAMP,QAAQ,CAACD,KAAK,IAAI,CAACA,KAAX,CAA/B;AAAA,wBACGA,KAAK,GAAG,eAAH,GAAqB;AAD7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF,WACOA,KADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA,kBADF;AAwCD;;GA3CuBJ,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport { SwitchTransition, CSSTransition } from \"react-transition-group\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"../App.css\";\n\nconst modes = [\"out-in\", \"in-out\"];\n\nexport default function App() {\n  const [mode, setMode] = React.useState(\"out-in\");\n  const [state, setState] = React.useState(true);\n  return (\n    <>\n      <div className=\"label\">Mode:</div>\n      <div className=\"modes\">\n        {modes.map(m => (\n          <Form.Check\n            key={m}\n            custom\n            inline\n            label={m}\n            id={`mode=msContentScript${m}`}\n            type=\"radio\"\n            name=\"mode\"\n            checked={mode === m}\n            value={m}\n            onChange={event => {\n              setMode(event.target.value);\n            }}\n          />\n        ))}\n      </div>\n      <div className=\"main\">\n        <SwitchTransition mode={mode}>\n          <CSSTransition\n            key={state}\n            addEndListener={(node, done) => {\n              node.addEventListener(\"transitionend\", done, false);\n            }}\n            classNames=\"fade\"\n          >\n            <div className=\"button-container\">\n              <Button onClick={() => setState(state => !state)}>\n                {state ? \"Hello, world!\" : \"Goodbye, world!\"}\n              </Button>\n            </div>\n          </CSSTransition>\n        </SwitchTransition>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}